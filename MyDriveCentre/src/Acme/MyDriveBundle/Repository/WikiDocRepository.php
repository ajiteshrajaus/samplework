<?php
/**
 * Created by PhpStorm.
 * User: Ajitesh
 * Date: 6/16/14
 * Time: 11:08 AM
 */
namespace Acme\MyDriveBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WikiDocRepository extends DocumentRepository
{
    public function findWikiByParent($fid)
    {

        return $this->createQueryBuilder()
            ->field('parent')->equals($fid)
            ->limit(10)
            ->getQuery()
            ->execute();

    }
    public function findWikiDraft($fid)
    {
        return $this->createQueryBuilder()
            ->field('parent')->equals($fid)
            ->field('isDraftCopy')->equals('yes')
            ->limit(1)
            ->getQuery()
            ->execute();

    }


    /**
     * Find Wikis
     *
     * Finds ...
     *
     * @param   object  $parentId   This is a mongo ID of parent folder
     * @param   int     $companyId  Company ID
     *
     * @return  array   An array of wiki docs
     */


    public function findWikis($parentId, $userId)
    {
        // Search for a sub-folder
        if($parentId)
        {
            return $this->createQueryBuilder()
                ->field('parent')->equals(new \MongoId($parentId))
                ->field('userId')->equals($userId)
                ->field('isDraftCopy')->equals(null)
                ->getQuery()
                ->execute();
        }
        else
        {
            // Search the main index
                return $this->createQueryBuilder()
                ->field('parent')->exists(FALSE)        // Parent field will not exist for folders in index.
                ->field('userId')->equals($userId)
                ->field('isDraftCopy')->equals(null)
                ->getQuery()
                ->execute();
        }

    }
}